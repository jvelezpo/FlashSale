// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  balances      UserBalances[]
  purchases     Purchases[]
  role Role @default(USER)
}

model UserBalances {
  id            String  @id @default(cuid())
  userId        String
  currency      String
  balance       Int     @default(0)
  user          User    @relation(fields: [userId], references: [id])
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

model FlashSaleItems {
  id            String  @id @default(cuid())
  name          String
  price         Int
  quantity      Int @default(0)
  beginAt       DateTime
  purchases     Purchases[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Purchases {
  id            String          @id @default(cuid())
  userId        String
  itemId        String
  price         Int
  quantity      Int
  user          User            @relation(fields: [userId], references: [id])
  item          FlashSaleItems  @relation(fields: [itemId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}